import{htmlHandler}from"html-handler";import{templateHandler}from"template-handler";import{uploadImg}from"img-upload";import{userControl}from"user-controls";import{userModel}from"user-model";import{validator}from"validator";class UserController{constructor(e,o,r,l){this.utils=o,this.userModel=e,this.htmlHandler=r,this.userControl=l}loadSignUpPage(e){userModel.isUserLoggedIn().then(o=>{o?e.redirect("#/home"):htmlHandler.setHtml("sign-up","#content").then(()=>{validator.validateSignUp()})})}loadSignInPage(e){userModel.isUserLoggedIn().then(o=>{o?e.redirect("#/home"):htmlHandler.setHtml("sign-in","#content").then(()=>{validator.validateSignIn()})})}loadProfilePicture(e){let o=userModel.getCurrentUser();userModel.isUserLoggedIn().then(r=>{r?templateHandler.setTemplate("profile.avatar.template","#content",{image:o.photoURL}).then(()=>{}):e.redirect("#/home")})}loadProfilePassword(e){userModel.isUserLoggedIn().then(o=>{o?htmlHandler.setHtml("profile-password","#content").then(()=>{$("#password-reset").click(function(){let e=userModel.getCurrentUser();userModel.resetPassword(e.email)})}):e.redirect("#/home")})}signUp(e){const o={email:e.params.email,password:e.params.password};let r="";userModel.signUp(o).then(()=>{console.log("user created"),userControl.toggleUserControlElement(),uploadImg.uploadToApi($("#avatar")[0].files[0]).then(o=>{r=o.data.link,userModel.updateProfile({displayName:e.params.username,photoURL:r}).then(()=>{e.redirect("#/home")}).catch(e=>{console.log(e.msg)})})}).catch(e=>{console.log(e.message),$(".label.label-danger").text(e.message)})}signIn(e){const o={email:e.params.email,password:e.params.password};userModel.signIn(o).then(()=>{console.log("user signed in"),userControl.toggleUserControlElement(),e.redirect("#/home")}).catch(e=>{console.log(e.message);$(".label.label-danger").text("Invalid username or password!")})}signOut(e){userModel.signOut().then(()=>{console.log("you are now loged off"),userControl.toggleUserControlElement(),e.redirect("#/home")}).catch(e=>{console.log(e)})}changeAvatar(e){let o,r=userModel.getCurrentUser();uploadImg.uploadToApi($("#avatar")[0].files[0]).then(l=>{o=l.data.link,userModel.updateProfile({displayName:r.displayName,photoURL:o}).then(()=>{e.redirect("#/home/profile/change-avatar")}).catch(e=>{console.log(e.message)})})}resetPassword(e){userModel.resetPassword(e).then(()=>{console.log("password reset")}).catch(e=>{console.log(e.message)})}}const userController=new UserController(userModel,uploadImg,htmlHandler,userControl);export{userController};